@RiverBooks.Web_HostAddress=https://localhost:7248
@Book1Id=a89f6cd7-4693-457b-9009-02205dbbfe45

GET {{RiverBooks.Web_HostAddress}}/books
Accept: application/json

###

GET {{RiverBooks.Web_HostAddress}}/books/{{Book1Id}}
Accept: application/json

###

POST {{RiverBooks.Web_HostAddress}}/books
Accept: application/json
Content-Type: application/json

{
  "id": "e306bae1-8e0f-4b57-908a-c9f2ee508745",
  "title": "Building Modular Monoliths",
  "author": "Steve Smith",
  "price": 29.99
}

###

# test the Location header returned...
GET {{RiverBooks.Web_HostAddress}}/books/e306bae1-8e0f-4b57-908a-c9f2ee508745
Accept: application/json

###

# delete newly created book
DELETE {{RiverBooks.Web_HostAddress}}/books/e306bae1-8e0f-4b57-908a-c9f2ee508745
Accept: application/json

###

# Update an existing book's price
POST {{RiverBooks.Web_HostAddress}}/books/e306bae1-8e0f-4b57-908a-c9f2ee508745/pricehistory
Accept: application/json
Content-Type: application/json

{
  "newprice": 9.99
}

###

# Users

# CREATE User
POST {{RiverBooks.Web_HostAddress}}/users
Accept: application/json
Content-Type: application/json

{
  "email": "steve@test.com",
  "password": "Pass@word1"
}

###

# LOGIN / GET TOKEN
POST {{RiverBooks.Web_HostAddress}}/users/login
Accept: application/json
Content-Type: application/json

{
  "email": "steve@test.com",
  "password": "Pass@word1"
}

###

# Add Item to Cart

@token=eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJFbWFpbEFkZHJlc3MiOiJzdGV2ZUB0ZXN0LmNvbSIsImlhdCI6MTcwODQ2MjIzNywiZXhwIjoxNzA4NDY1ODM3LCJuYmYiOjE3MDg0NjIyMzd9.UYw4_7rzEvOUw1YRmBBcLNwPpgTZmbsMI5UOmaSK9X8

POST {{RiverBooks.Web_HostAddress}}/cart
Accept: text/plain
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "bookId": "e4fa19bf-6981-4e50-a542-7c9b26e9ec31",
  "quantity": 2
}

###

# List Items in Cart
GET {{RiverBooks.Web_HostAddress}}/cart
Accept: application/json
Authorization: Bearer {{token}}

###

# Add Address to User
# Used by checkout process, during which the user chooses the address IDs

POST {{RiverBooks.Web_HostAddress}}/users/addresses
Accept: application/json
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "street1": "1234678 Main St.",
  "street2": "Number 722",
  "city":"Anytown",
  "state":"OH",
  "postalCode":"12345-6789",
  "country":"USA"
}


###

# List User Addresses

GET {{RiverBooks.Web_HostAddress}}/users/addresses
Accept: application/json
Authorization: Bearer {{token}}

###

# Checkout Cart

POST {{RiverBooks.Web_HostAddress}}/cart/checkout
Accept: application/json
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "shippingAddressId": "b77c28fa-d790-4aa0-9164-22df420e47b5",
  "billingAddressId": "b77c28fa-d790-4aa0-9164-22df420e47b5"
}

###

POST {{RiverBooks.Web_HostAddress}}/flushcache
Accept: application/json
Content-Type: application/json

{
}

###

# GET EMAILS

GET {{RiverBooks.Web_HostAddress}}/emails
Accept: application/json

###

# TOP SALES REPORT 1 (Reach-In Reporting)
GET {{RiverBooks.Web_HostAddress}}/topsales?month=2&year=2024
Accept: application/json

###

# TOP SALES REPORT 2 (Event-populated reporting database)

GET {{RiverBooks.Web_HostAddress}}/topsales2d?month=2&year=2024
Accept: application/json

###
